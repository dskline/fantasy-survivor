-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public.rulesets
(
    id         uuid                     NOT NULL DEFAULT uuid_generate_v4(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    created_by uuid                     NOT NULL DEFAULT uuid_generate_v4(),
    data       json                     NOT NULL,
    CONSTRAINT rulesets_pkey PRIMARY KEY (id),
    CONSTRAINT rulesets_created_by_fkey FOREIGN KEY (created_by)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.rulesets
    OWNER to postgres;

ALTER TABLE IF EXISTS public.rulesets
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.rulesets TO anon;

GRANT ALL ON TABLE public.rulesets TO authenticated;

GRANT ALL ON TABLE public.rulesets TO postgres;

GRANT ALL ON TABLE public.rulesets TO service_role;
CREATE POLICY "Enable access to all users"
    ON public.rulesets
    AS PERMISSIVE
    FOR SELECT
    TO public
    USING (true);

CREATE TABLE IF NOT EXISTS public.leagues
(
    id         uuid                     NOT NULL              DEFAULT uuid_generate_v4(),
    created_by uuid                     NOT NULL              DEFAULT uuid_generate_v4(),
    season     uuid                     NOT NULL              DEFAULT uuid_generate_v4(),
    ruleset    uuid                                           DEFAULT uuid_generate_v4(),
    created_at timestamp with time zone NOT NULL              DEFAULT (now() AT TIME ZONE 'utc'::text),
    title      character varying COLLATE pg_catalog."default" DEFAULT ''::character varying,
    CONSTRAINT leagues_pkey PRIMARY KEY (id),
    CONSTRAINT leagues_created_by_fkey FOREIGN KEY (created_by)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT leagues_ruleset_fkey FOREIGN KEY (ruleset)
        REFERENCES public.rulesets (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT leagues_season_fkey FOREIGN KEY (season)
        REFERENCES public.seasons (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.leagues
    OWNER to postgres;

ALTER TABLE IF EXISTS public.leagues
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.leagues TO anon;

GRANT ALL ON TABLE public.leagues TO authenticated;

GRANT ALL ON TABLE public.leagues TO postgres;

GRANT ALL ON TABLE public.leagues TO service_role;
CREATE POLICY "Enable access to all users"
    ON public.leagues
    AS PERMISSIVE
    FOR SELECT
    TO public
    USING (true);

REVOKE ALL ON TABLE public.events FROM authenticated;
REVOKE ALL ON TABLE public.events FROM service_role;
REVOKE ALL ON TABLE public.events FROM postgres;
GRANT ALL ON TABLE public.events TO authenticated;

GRANT ALL ON TABLE public.events TO postgres;

GRANT ALL ON TABLE public.events TO service_role;

REVOKE ALL ON TABLE public.episodes FROM authenticated;
REVOKE ALL ON TABLE public.episodes FROM service_role;
REVOKE ALL ON TABLE public.episodes FROM postgres;
GRANT ALL ON TABLE public.episodes TO authenticated;

GRANT ALL ON TABLE public.episodes TO postgres;

GRANT ALL ON TABLE public.episodes TO service_role;
