-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public.episodes
(
    id         uuid                     NOT NULL DEFAULT uuid_generate_v4(),
    season     uuid                     NOT NULL DEFAULT uuid_generate_v4(),
    start_time timestamp with time zone NOT NULL,
    CONSTRAINT episodes_pkey PRIMARY KEY (id),
    CONSTRAINT episodes_season_start_time_key UNIQUE (season, start_time),
    CONSTRAINT episodes_season_fkey FOREIGN KEY (season)
        REFERENCES public.seasons (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.episodes
    OWNER to postgres;

ALTER TABLE IF EXISTS public.episodes
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.episodes TO anon;

GRANT ALL ON TABLE public.episodes TO authenticated;

GRANT ALL ON TABLE public.episodes TO postgres;

GRANT ALL ON TABLE public.episodes TO service_role;
CREATE POLICY "Enable access to all users"
    ON public.episodes
    AS PERMISSIVE
    FOR SELECT
    TO public
    USING (true);

ALTER TABLE IF EXISTS public.contestant_seasons
    ADD COLUMN id uuid NOT NULL DEFAULT uuid_generate_v4();
ALTER TABLE IF EXISTS public.contestant_seasons
    DROP CONSTRAINT IF EXISTS contestant_seasons_pkey;

ALTER TABLE IF EXISTS public.contestant_seasons
    ADD CONSTRAINT contestant_seasons_pkey PRIMARY KEY (id);

ALTER TABLE IF EXISTS public.contestant_seasons
    ADD CONSTRAINT contestant_seasons_unique_key UNIQUE (season, contestant);

CREATE TABLE IF NOT EXISTS public.events
(
    id                uuid                                           NOT NULL DEFAULT uuid_generate_v4(),
    episode           uuid                                           NOT NULL DEFAULT uuid_generate_v4(),
    rule              character varying COLLATE pg_catalog."default" NOT NULL,
    contestant_season uuid                                           NOT NULL DEFAULT uuid_generate_v4(),
    comment           character varying COLLATE pg_catalog."default",
    CONSTRAINT events_pkey PRIMARY KEY (id),
    CONSTRAINT events_contestant_season_fkey FOREIGN KEY (contestant_season)
        REFERENCES public.contestant_seasons (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT events_episode_fkey FOREIGN KEY (episode)
        REFERENCES public.episodes (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT events_rule_fkey FOREIGN KEY (rule)
        REFERENCES public.rules (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.events
    OWNER to postgres;

ALTER TABLE IF EXISTS public.events
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.events TO anon;

GRANT ALL ON TABLE public.events TO authenticated;

GRANT ALL ON TABLE public.events TO postgres;

GRANT ALL ON TABLE public.events TO service_role;
CREATE POLICY "Enable access to all users"
    ON public.events
    AS PERMISSIVE
    FOR SELECT
    TO public
    USING (true);
